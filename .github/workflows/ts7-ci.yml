name: Nodejs CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./ts6-docker-sample-api/

    strategy:
      matrix:
        node-version: [18.x]

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: testDb
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mongo:
        image: mongo:latest
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password
        ports:
          - 27017:27017
        options: >-
          --health-cmd 'mongo --eval "db.runCommand({ping: 1})"'
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
  
    - name: Install Dependencies and Run Tests
      env:
        MONGOURI: mongodb://root:password@localhost:27017/admin
        POSTGRESURI: postgres://user:password@localhost:5432/testDb
      run: |
        npm ci
        npm test
